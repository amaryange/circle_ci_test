version: 2.1

workflows:
  ci-cd-pipeline:
    jobs:
      - build-and-push:
          context:
            - test  # Spécifiez le context ici
          filters:
            branches:
              only: main
      - deploy:
          context:
            - test  # Spécifiez le context ici
          requires:
            - build-and-push
          filters:
            branches:
              only: main

jobs:
  build-and-push:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.24  # Utiliser une version plus récente
      - run:
          name: Build and Push Docker image
          command: |
            # Build Docker image
            docker build -t $HARBOR_URL/circle_ci/app:$CIRCLE_SHA1 .
            docker tag $HARBOR_URL/circle_ci/app:$CIRCLE_SHA1 $HARBOR_URL/circle_ci/app:latest

            # Login to Harbor
            echo "$HARBOR_PASSWORD" | docker login $HARBOR_URL -u $HARBOR_USERNAME --password-stdin

            # Push Docker image to Harbor
            docker push $HARBOR_URL/circle_ci/app:$CIRCLE_SHA1
            docker push $HARBOR_URL/circle_ci/app:latest

  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - add_ssh_keys:
          fingerprints:
            - "SHA256:90L7RxlJraxJkSr/Ww7k7Zh+En8o+kwkzV6oQctlxyA"
      - run:
          name: Deploy to server
          command: |
            # Créer le script avec des variables d'environnement correctement échappées
            cat > deploy.sh << 'EOL'
            #!/bin/bash
            HARBOR_URL="${HARBOR_URL}"
            HARBOR_USERNAME="${HARBOR_USERNAME}"
            HARBOR_PASSWORD="${HARBOR_PASSWORD}"

            echo "$HARBOR_PASSWORD" | docker login $HARBOR_URL -u $HARBOR_USERNAME --password-stdin
            docker pull $HARBOR_URL/circle_ci/app:latest
            if [ "$(docker ps -aq -f name=nextjs_app)" ]; then
              docker stop nextjs_app
              docker rm nextjs_app
            fi
            docker run -d --name nextjs_app -p 3001:3001 --restart unless-stopped $HARBOR_URL/circle_ci/app:latest
            docker image prune -a -f --filter "until=24h"
            EOL

            # Remplacer les variables dans le script
            sed -i "s|\${HARBOR_URL}|$HARBOR_URL|g" deploy.sh
            sed -i "s|\${HARBOR_USERNAME}|$HARBOR_USERNAME|g" deploy.sh
            sed -i "s|\${HARBOR_PASSWORD}|$HARBOR_PASSWORD|g" deploy.sh

            # Envoyer le script au serveur
            scp -o StrictHostKeyChecking=no deploy.sh $SSH_USER@$SSH_HOST:/tmp/deploy.sh

            # Exécuter le script
            ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "chmod +x /tmp/deploy.sh && /tmp/deploy.sh && rm /tmp/deploy.sh"
